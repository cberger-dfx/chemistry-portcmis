# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ main, christoph ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}
    

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./PortCMIS.csproj

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    
    # Setup .NET Core SDK
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ vars.DOTNET_VERSION }}
        source-url: ${{ vars.AZURE_ARTIFACTS_FEED_URL }}
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.AZURE_DEVOPS_TOKEN }} 


    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2


    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}./PortCMIS
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: |
          nuget restore ${{env.SOLUTION_FILE_PATH}}
          msbuild ${{env.SOLUTION_FILE_PATH}} /p:Configuration=Release 

      
    - name: Pack NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}./PortCMIS
      run: nuget pack PortCMIS.nuspec -version ${{ vars.PACKAGE_VERSION }} -OutputDirectory nupkg -Properties Configuration=Release
      


    # Publish the package to Azure Artifacts
    - name: 'dotnet publish'
      working-directory: ${{env.GITHUB_WORKSPACE}}./PortCMIS
      run: dotnet nuget push --api-key AzureArtifacts ./nupkg/PortCMIS.${{ vars.PACKAGE_VERSION }}.nupkg 

